title Schedule Movie Screening BCE

actor Staff
boundary ScheduleScreeningDialog
boundary StaffUI

control ManagementSystem
participant Cinema
participant ScreenMapper
participant ScreenMapper
participant MovieMapper
participant ScreeningMapper
database Database
entity s (Screen)
entity m (Movie)
entity Screening

Staff->StaffUI:showScheduleScreeningDialog()
activate StaffUI

StaffUI->*ScheduleScreeningDialog:show()
activate ScheduleScreeningDialog
ScheduleScreeningDialog-->StaffUI:
deactivate ScheduleScreeningDialog


StaffUI->ManagementSystem:scheduleScreening(date : LocalDate, start_time: LocalTime, \nscreen_no : Integer, movie_name : String)
activate ManagementSystem


expandable- see diagram - Schedule Screening ECE (overlap Screening)

ManagementSystem->ManagementSystem:checkOverlapScreening                                                         
end 

ManagementSystem->Cinema:scheduleScreening(date : LocalDate, start_time: LocalTime, \nscreen_no : Integer, movie_name : String)
activate Cinema

Cinema->ScreenMapper:getScreen(screen_no : int)
activate ScreenMapper
ScreenMapper->ScreenMapper:getFromCacheByNumber(screen_no)
ScreenMapper-->Cinema:return s : Screen
deactivate ScreenMapper

Cinema->MovieMapper:getMovie(movie_name : String)
activate MovieMapper
MovieMapper->MovieMapper:getFromCacheByNumber(movie_no)
MovieMapper-->Cinema:return m : Movie
deactivate MovieMapper


Cinema->ScreeningMapper:scheduleScreening(date : LocalDate, start_time: LocalTime, \ns : Screen, m : Movie, ticket_sold: Integer)
activate ScreeningMapper
ScreeningMapper->Database:oid := getId()
ScreeningMapper->ScreeningMapper:performUpdate(sql : String)
activate ScreeningMapper


ScreeningMapper->Database:executeUpdate(sql : String)
ScreeningMapper-->ScreeningMapper:
deactivate ScreeningMapper


ScreeningMapper->*Screening:PersistentScreening(oid : Integer, date : LocalDate, \nstart_time: LocalTime, s : Screen, m : Movie, ticket_sold: Integer)
activate Screening
Screening-->ScreeningMapper:
deactivate Screening
ScreeningMapper-->Cinema:
deactivate ScreeningMapper
Cinema-->ManagementSystem:
deactivate Cinema
ManagementSystem->ManagementSystem:notifyObservers()
activate ManagementSystem
ManagementSystem->StaffUI:update()
activate StaffUI
StaffUI->ManagementSystem:getDate()
activate ManagementSystem
ManagementSystem-->StaffUI:return date
deactivate ManagementSystem
StaffUI->ManagementSystem:getScreenings()
activate ManagementSystem
ManagementSystem-->StaffUI: return Screenings
deactivate ManagementSystem
StaffUI-->ManagementSystem:
deactivate StaffUI
deactivateafter ManagementSystem


ManagementSystem-->StaffUI:
deactivate ManagementSystem
StaffUI-->Staff:
deactivate StaffUI