
title Sell Tickets BCE

actor Staff
boundary ": StaffUI" as SU
control ": ManagementSystem" as MS

participant "：Cinema" as CNM
entity current：Screenings
entity "s：Screen" as S
entity "selected：Screening" as SS

participant "：ScreeningMapper" as SM
database DataBase

Staff ->SU: mousePressed(x : Integer, y : Integer)

activate SU
SU ->SU: screenNumber: yToScreening(y : Integer)
SU ->SU: time: xToTime: xTotime(x : Integer)

activate MS
SU->MS:selectScreening(sno : Integer, time: LocalTime)
loop for all screenings on screen
MS->current：Screenings:s := getScreen()
MS->current：Screenings:time := getStartTime()

end 
MS->MS: notifyObservers()
MS->SU: update()
MS-->SU:
deactivate MS
SU-->Staff:
deactivate SU

Staff->SU:sellTicket()
activate SU
SU->MS: sellTicket()
activate MS


MS->S:getCapacity()
activate S
S-->MS:return capacity
deactivate S
MS->SS:getTicketsSold()
activate SS
SS-->MS: return ticket_sold
deactivate SS


MS->SS:changeTicketsSold(newTicketSold : Integer)
activate SS
SS-->MS:
deactivate SS

MS->CNM: updateScreening(selectedScreening : Screening)
activate CNM
CNM->SM: updateScrenning(s : Screening)
activate SM
SM->SM: performUpdate(sql: String)
activate SM
SM->DataBase: excuteUpdate(sql: String)
SM-->SM: 

deactivate SM
SM-->CNM:
deactivate SM
CNM-->MS:
deactivate CNM

expandable− see diagram - Display BCE
MS->MS:notifyObservers()                      
end 

MS-->SU:
deactivate MS
SU-->Staff:
deactivate SU
