title Schedule Movie Screening ECE
actor Staff
boundary ScreeningDialog
boundary StaffUI
control ManagementSystem
participant ScreenMapper
participant MovieMapper
entity "m: Movie" as m

Staff->StaffUI:scheduleScreening()
activate StaffUI

StaffUI->*ScreeningDialog:ScreeningDialog()
activate ScreeningDialog
ScreeningDialog-->StaffUI:
deactivate ScreeningDialog


StaffUI->ManagementSystem:scheduleScreening(date : LocalDate, start_time: LocalTime, \nscreen_no : Integer, movie_name : String, ticket_sold: Integer)
activate ManagementSystem

ManagementSystem->ScreenMapper:getScreen(screen_no : Integer)
activate ScreenMapper
ScreenMapper->ScreenMapper:getFromCacheByNumber(screen_no)
ScreenMapper-->ManagementSystem: return s : Screen
deactivate ScreenMapper

ManagementSystem->MovieMapper:getMovie()
activate MovieMapper
MovieMapper->MovieMapper:getFromCacheByNumber(movie_name)
MovieMapper->ManagementSystem: return m : Movie
deactivate MovieMapper


ManagementSystem->m:getDuration(m)
activate m
m-->ManagementSystem: return duration : Integer
deactivate m

ManagementSystem->ManagementSystem:checkOverlapScreening(date : LocalDate, start_time: LocalTime, \nscreen_no : Integer, duration : Integer)
activate ManagementSystem
note over ManagementSystem:another screening is found that overlaps with this in time on the same screen


ManagementSystem->ManagementSystem:observerMessage(message : String, false : Boolean)
activate ManagementSystem


ManagementSystem-->ManagementSystem:return false
deactivate ManagementSystem
ManagementSystem-->ManagementSystem:return true


deactivate ManagementSystem
ManagementSystem-->StaffUI:return false
deactivate ManagementSystem
StaffUI-->Staff:
deactivate StaffUI

